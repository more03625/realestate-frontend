{"version":3,"sources":["components/sections/forgot-password/Content.js","components/pages/Forgotpassword.js"],"names":["images","img","title","text","settings","slidesToShow","slidesToScroll","arrows","autoplay","dots","dotsClass","Content","useState","loadingButton","setLoadingButton","email","setEmail","emailError","setEmailError","token","setToken","tokenError","setTokenError","useHistory","className","method","onSubmit","e","preventDefault","emailValidator","RegExp","test","length","isValid","url","Host","Endpoints","forgotPassword","axios","post","type","then","response","data","error","errorToast","target","reset","successToast","catch","onChange","value","placeholder","name","style","color","fontSize","sitekey","process","captchaToken","onExpire","to","disabled","role","map","item","i","backgroundImage","Forgotpassword","content","Header"],"mappings":"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","file":"static/js/33.a6ecf642.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Slider from \"react-slick\";\r\nimport { Endpoints, Host, successToast, errorToast } from \"../../../helper/comman_helper\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ReCaptchaV2 from \"react-google-recaptcha\";\r\n\r\n\r\nconst images = [\r\n  {\r\n    img: \"assets/img/coming-soon/1.jpg\",\r\n    title: \"Quote of the day\",\r\n    text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s\",\r\n  },\r\n  {\r\n    img: \"assets/img/coming-soon/2.jpg\",\r\n    title: \"Quote of the day\",\r\n    text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s\",\r\n  },\r\n  {\r\n    img: \"assets/img/coming-soon/3.jpg\",\r\n    title: \"Quote of the day\",\r\n    text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s\",\r\n  },\r\n];\r\nconst settings = {\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1,\r\n  arrows: false,\r\n  autoplay: true,\r\n  dots: true,\r\n  dotsClass: \"d-flex slick-dots\",\r\n};\r\nconst Content = () => {\r\n  const [loadingButton, setLoadingButton] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [tokenError, setTokenError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const isValid = () => {\r\n    var emailValidator = new RegExp(\r\n      /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g\r\n    ).test(email);\r\n\r\n    if (!emailValidator && token && token === null && token.length === 0) {\r\n      setEmailError(\"Please enter a valid email address!\");\r\n      setTokenError('Please verify captcha!')\r\n    } else if (!emailValidator) {\r\n      setEmailError(\"Please enter a valid email address!\");\r\n    } else if (token === null || token.length === 0) {\r\n      setTokenError('Please verify captcha!')\r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n\r\n  const submit = (e) => {\r\n    setLoadingButton(true)\r\n    e.preventDefault();\r\n\r\n    setEmailError(\"\");\r\n    setTokenError('')\r\n\r\n    if (isValid()) {\r\n      var url = Host + Endpoints.forgotPassword;\r\n      axios.post(url, { email: email, type: 'seller', token: token, }).then((response) => {\r\n        setLoadingButton(false)\r\n        if (response.data.error === true) {\r\n          // history.push(\"/forgot-password-verification\");\r\n          errorToast(\"❌\" + response.data.title);\r\n        } else {\r\n          e.target.reset()\r\n          successToast('Check email to create new password!');\r\n        }\r\n      }).catch(() => {\r\n\r\n        setLoadingButton(false);\r\n\r\n      })\r\n    } else {\r\n      setLoadingButton(false);\r\n    }\r\n  };\r\n\r\n  const handleToken = (captchaToken) => {\r\n    setToken(captchaToken);\r\n  };\r\n  const handleExpire = () => {\r\n    setToken(null);\r\n  };\r\n  return (\r\n    <div className=\"acr-auth-container\">\r\n      <div className=\"acr-auth-content\">\r\n        <form method=\"post\" onSubmit={submit}>\r\n          <div className=\"auth-text\">\r\n            <h3>Forgot Password</h3>\r\n            <p>\r\n              Lorem Ipsum is simply dummy text of the printing and typesetting\r\n              industry. Lorem Ipsum has been the industry's\r\n            </p>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"required\">Email</label>\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"form-control form-control-light\"\r\n              placeholder=\"Enter your email\"\r\n              name=\"email\"\r\n            />\r\n            <p style={{ color: \"red\", fontSize: \"14px\" }}>{emailError}</p>\r\n          </div>\r\n\r\n\r\n          <ReCaptchaV2\r\n            sitekey={process.env.REACT_APP_RECAPTCHA_SITE_KEY}\r\n            onChange={handleToken}\r\n            onExpire={handleExpire}\r\n          />\r\n          <p style={{ color: \"red\", fontSize: \"14px\" }}>{tokenError}</p>\r\n\r\n          <div className=\"form-group\">\r\n            <Link to=\"/login\" className=\"forgot-password\">\r\n              Back to login\r\n            </Link>\r\n          </div>\r\n\r\n          <p className=\"text-center mb-0\">\r\n            Don't have an account? <Link to=\"/register\">Create One</Link>{\" \"}\r\n          </p>\r\n          <button type=\"submit\" className=\"btn-custom secondary btn-block\" disabled={loadingButton}>\r\n            Send Recovery Email\r\n\r\n            {loadingButton === true ?\r\n              <div className=\"ml-1 spinner-border spinner-border-sm\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div> : ''\r\n            }\r\n          </button>\r\n        </form>\r\n        <ToastContainer />\r\n      </div>\r\n      <div className=\"acr-auth-bg\">\r\n        <Slider className=\"acr-auth-bg-slider acr-cs-bg-slider\" {...settings}>\r\n          {images.map((item, i) => (\r\n            <div key={i}>\r\n              <div\r\n                className=\"acr-cs-bg-item bg-cover bg-center\"\r\n                style={{\r\n                  backgroundImage:\r\n                    \"url(\" + process.env.PUBLIC_URL + \"/\" + item.img + \")\",\r\n                }}\r\n              >\r\n                <div className=\"acr-auth-quote\">\r\n                  <h6>{item.title}</h6>\r\n                  <p>{item.text}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Slider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React, { Component, Fragment } from 'react';\r\nimport MetaTags from \"react-meta-tags\";\r\nimport Header from '../layouts/Header';\r\nimport Content from '../sections/forgot-password/Content';\r\nimport Footer from '../layouts/Footerthree';\r\n\r\nconst Forgotpassword = () => {\r\n    return (\r\n        <Fragment>\r\n            <MetaTags>\r\n                <title>Forgot password | Neprealestate</title>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"#\"\r\n                />\r\n            </MetaTags>\r\n            <Header />\r\n            <Content />\r\n            <Footer />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Forgotpassword;"],"sourceRoot":""}